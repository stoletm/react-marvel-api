{"version":3,"file":"static/js/453.c4ffb21f.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = (props) => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [comicsListEnded, setComicsListEnded] = useState(false);\r\n    const [fetching, setFetching] = useState(false);\r\n    \r\n    const {loading, error, getAllComics, clearError} = useMarvelService();\r\n\r\n\r\n    // На случай двойной загрузки из-за строгого режима\r\n    useEffect(() => {\r\n        if (fetching) {\r\n            onRequest(offset, true);\r\n            setFetching(false)\r\n        }\r\n    }, [fetching]);\r\n\r\n    useEffect(() => {\r\n        setFetching(true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        clearError()\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded);\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 8);\r\n        setComicsListEnded(ended);\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            let blankImgStyle = {};\r\n            \r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif') {\r\n                blankImgStyle = {'objectFit' : 'contain'};\r\n            }\r\n            \r\n            return (\r\n                <li \r\n                    className=\"comics__item\"\r\n                    tabIndex={0}\r\n                    key={item.id}\r\n                >\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img \r\n                            src={item.thumbnail} \r\n                            alt={item.title} \r\n                            style={blankImgStyle}\r\n                            className='comics__item-img'\r\n                        />\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n    \r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n\r\n            {loading && newItemLoading ? <Spinner/> : (\r\n                <button \r\n                    className=\"button button__main button__long\"\r\n                    style={{'display' : comicsListEnded ? 'none' : 'block'}}\r\n                    onClick={() => onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel comics list page\"/>\r\n                <title>Comics list</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsListEnded","setComicsListEnded","_useState9","_useState10","fetching","setFetching","_useMarvelService","useMarvelService","loading","error","getAllComics","clearError","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","blankImgStyle","thumbnail","_jsx","className","tabIndex","children","_jsxs","Link","to","id","src","alt","title","style","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}